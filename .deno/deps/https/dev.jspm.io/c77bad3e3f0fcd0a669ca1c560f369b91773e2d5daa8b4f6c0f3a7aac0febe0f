import { dew as _baseDewDew } from "./handlebars/base.dew.js";
import { dew as _safeStringDewDew } from "./handlebars/safe-string.dew.js";
import { dew as _exceptionDewDew } from "./handlebars/exception.dew.js";
import { dew as _utilsDewDew } from "./handlebars/utils.dew.js";
import { dew as _runtimeDewDew } from "./handlebars/runtime.dew.js";
import { dew as _noConflictDewDew } from "./handlebars/no-conflict.dew.js";
var exports = {},
    _dewExec = false;
export function dew() {
  if (_dewExec) return exports;
  _dewExec = true;
  exports.__esModule = true; // istanbul ignore next

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  } // istanbul ignore next


  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj['default'] = obj;
      return newObj;
    }
  }

  var _handlebarsBase = _baseDewDew();

  var base = _interopRequireWildcard(_handlebarsBase); // Each of these augment the Handlebars object. No need to setup here.
  // (This is done to easily share code between commonjs and browse envs)


  var _handlebarsSafeString = _safeStringDewDew();

  var _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);

  var _handlebarsException = _exceptionDewDew();

  var _handlebarsException2 = _interopRequireDefault(_handlebarsException);

  var _handlebarsUtils = _utilsDewDew();

  var Utils = _interopRequireWildcard(_handlebarsUtils);

  var _handlebarsRuntime = _runtimeDewDew();

  var runtime = _interopRequireWildcard(_handlebarsRuntime);

  var _handlebarsNoConflict = _noConflictDewDew();

  var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict); // For compatibility and usage outside of module systems, make the Handlebars object a namespace


  function create() {
    var hb = new base.HandlebarsEnvironment();
    Utils.extend(hb, base);
    hb.SafeString = _handlebarsSafeString2['default'];
    hb.Exception = _handlebarsException2['default'];
    hb.Utils = Utils;
    hb.escapeExpression = Utils.escapeExpression;
    hb.VM = runtime;

    hb.template = function (spec) {
      return runtime.template(spec, hb);
    };

    return hb;
  }

  var inst = create();
  inst.create = create;

  _handlebarsNoConflict2['default'](inst);

  inst['default'] = inst;
  exports['default'] = inst;
  exports = exports['default'];
  return exports;
}